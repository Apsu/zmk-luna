/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define base 0
#define nav  1
#define num  2
#define misc 3
#define func 4

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

&lt {
    tapping-term-ms = <250>;
    quick_tap_ms = <250>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick_tap_ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Luna Base Layer";
            bindings = <
                &kp V      &kp W      &kp F      &kp P        &kp B              &kp X      &kp L       &kp U      &kp Y      &kp SQT
                &hm LGUI R &hm LALT S &hm LCTL T &hm LSHFT H  &kp K              &kp J      &hm RSHFT N &hm RCTL A &hm RALT I &hm RGUI O
                           &kp C      &kp G      &kp D                                      &kp M       &kp COMMA  &kp DOT
                                                 &lt misc ESC &lt nav SPACE      &lt num E  &lt func BSPC
            >;
        };

        nav_layer {
            label = "Navigation and Shortcuts";
            bindings = <
               &kp LA(UP)     &kp LA(DOWN)     &kp LG(LS(LBKT)) &kp LG(LS(RBKT)) &kp LNLCK      &kp C_PREV &kp HOME         &kp UP     &kp END      &kp C_VOL_UP
               &kp LGUI       &kp LALT         &kp LCTL         &kp LSHIFT       &caps_word     &kp DEL    &kp LEFT         &kp DOWN   &kp RIGHT    &kp PG_DN
                              &kp LA(LS(DOWN)) &kp LS(PG_UP)    &kp LS(PG_DN)                              &kp C_PLAY_PAUSE &kp C_NEXT &kp C_VOL_DN
                                                                &trans           &trans         &kp RET    &trans
            >;
        };

        num_layer {
            label = "Numbers and Symbols";
            bindings = <
               &kp LBKT    &kp AT      &kp HASH    &kp DLLR     &kp GRAVE      &kp BSLH  &kp AMPS     &kp ASTRK   &kp LPAR    &trans
               &hm LGUI N1 &hm LALT N2 &hm LCTL N3 &hm LSHFT N4 &kp N5         &kp N6    &hm RSHFT N7 &hm RCTL N8 &hm RALT N9 &hm RGUI N0
                           &kp RBKT    &kp EQUAL   &kp MINUS                             &trans       &trans      &trans
                                                   &trans       &kp TAB        &trans    &trans
            >;
        };

        misc_layer {
            label = "Miscellaneous";
            bindings = <
                &trans &trans &trans &trans &trans               &ext_power EP_TOG &out OUT_USB     &out OUT_BLE      &out OUT_TOG &trans
                &trans &trans &trans &trans &trans &bt BT_CLR    &bt BT_SEL 1      &bt BT_SEL 2     &bt BT_SEL 3      &bt BT_SEL 4
                       &trans &trans &trans                                        &ext_power EP_ON &ext_power EP_OFF &trans
                                            &trans &trans        &trans            &trans
            >;
        };

       func_layer {
            label = "Function Keys";

            bindings = <
               &trans      &trans      &trans      &trans       &trans      &trans &trans       &trans      &trans      &trans
               &hm LGUI F1 &hm LALT F2 &hm LCTL F3 &hm LSHFT F4 &kp F5      &kp F6 &hm RSHFT F7 &hm RCTL F8 &hm RALT F9 &hm RGUI F10
                           &trans      &trans      &kp F11                         &kp F12      &trans      &trans
                                                   &trans       &trans      &trans &trans
            >;
        };
    };
};
