/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define base 0
#define nav  1
#define num  2
#define misc 3
#define func 4

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

&sk {
  quick-release;
};

&lt {
    tapping-term-ms = <250>;
    quick_tap_ms = <250>;
    flavor = "tap-preferred";
};

/ {
    #include "combos.dtsi"

    behaviors {
        hm: homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick_tap_ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Luna Base Layer";
            bindings = <
                &kp V      &kp W      &kp F      &kp P        &kp B           &kp J     &kp L       &kp U      &kp Y      &kp SQT
                &hm LGUI R &hm LALT S &hm LCTL T &hm LSHFT H  &kp K           &kp X     &hm RSHFT N &hm RCTL A &hm RALT I &hm RGUI O
                           &kp C      &kp G      &kp D                                  &kp M       &kp COMMA  &kp DOT
                                                 &lt misc ESC &lt nav SPACE   &lt num E &lt func BSPC
            >;
        };

        nav_layer {
            label = "Navigation and Shortcuts";
            bindings = <
               &kp LA(UP) &kp LA(DOWN) &kp LC(TAB)    &kp LC(TAB)      &trans         &kp INS &kp HOME   &kp UP     &kp END      &kp PG_UP
               &kp LGUI   &kp LALT     &kp LCTL       &kp LSHIFT       &caps_word     &kp DEL &kp LEFT   &kp DOWN   &kp RIGHT    &kp PG_DN
                          &trans       &kp LA(LS(UP)) &kp LA(LS(DOWN))                        &kp C_PREV &kp C_PLAY &kp C_NEXT
                                                      &trans           &trans         &kp RET &trans
            >;
        };

        num_layer {
            label = "Numbers and Symbols";
            bindings = <
               &kp LBKT    &kp RBKT    &kp EQUAL   &kp MINUS    &kp SEMI       &trans    &trans       &trans      &trans      &trans
               &hm LGUI N1 &hm LALT N2 &hm LCTL N3 &hm LSHFT N4 &kp N5         &kp N6    &hm RSHFT N7 &hm RCTL N8 &hm RALT N9 &hm RGUI N0
                           &kp GRAVE   &kp BSLH    &kp FSLH                              &trans       &trans     &trans
                                                   &trans       &kp TAB        &trans    &trans
            >;
        };

        misc_layer {
            label = "Miscellaneous";
            bindings = <
                &bootloader &trans &trans &trans &trans        &trans        &out OUT_USB     &out OUT_BLE      &out OUT_TOG      &trans
                &trans      &trans &trans &trans &trans        &bt BT_CLR    &bt BT_SEL 1     &bt BT_SEL 2      &bt BT_SEL 3      &bt BT_SEL 4
                            &trans &trans &trans                             &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG
                                          &trans &trans        &trans        &trans
            >;
        };

       func_layer {
            label = "Function Keys";

            bindings = <
               &trans      &trans        &trans       &trans       &trans      &trans &trans       &trans       &trans      &bootloader
               &hm LGUI F1 &hm LALT F2   &hm LCTL F3  &hm LSHFT F4 &kp F5      &kp F6 &hm RSHFT F7 &hm RCTL F8  &hm RALT F9 &hm RGUI F10
                           &kp C_BRI_DEC &kp C_BRI_UP &kp F11                         &kp F12      &kp C_VOL_DN &kp C_VOL_UP
                                                      &trans       &trans      &trans &trans
            >;
        };
    };
};
